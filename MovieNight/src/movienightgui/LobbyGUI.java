/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package movienightgui;

import java.awt.Color;
import java.util.ArrayList;
import java.util.Arrays;
import javax.swing.DefaultListModel;
import javax.swing.event.DocumentEvent;
import javax.swing.event.DocumentListener;

/**
 *
 * @author deneg
 */
public class LobbyGUI extends javax.swing.JFrame {
    
    private ArrayList<String> moviesAll = new ArrayList<>();
    private DefaultListModel<String> movies = new DefaultListModel<>();
    private DefaultListModel<String> lobbyUsers = new DefaultListModel<>();
    private DefaultListModel<String> suggestions = new DefaultListModel<>();
    
    private String selectedMovie;
    private Boolean searchEmpty = true;
    
    private ArrayList<String> votes = new ArrayList<>();

    /**
     * Creates new form LobbyGUI
     */
    public LobbyGUI() {
        initComponents();
        initSearch();
        
        testInit();
    }
    
    public void testInit() {
        String[] testMovies = {
            "Fight Club", "Interstellar", "Inception", "Avatar", "Schindler's List",
            "Tenet", "Black Swan", "All Quite on the Western Front", "Seven"
        };
        moviesAll = new ArrayList(Arrays.asList(testMovies));
        movies.addAll(Arrays.asList(testMovies));
        moviesList.setModel(movies);
        
        String[] testLobby = {"Abc", "Klm", "Xyz"};
        lobbyUsers.addAll(Arrays.asList(testLobby));
        usersInLobbyList.setModel(lobbyUsers);
        
        suggestions.addElement("Avatar");
        suggestions.addElement("Tenet");
        suggestions.addElement("Black Swan");
        suggestionsList.setModel(suggestions);        
    }
    
    private void showSelectedMovieInfo() {
        // Pull info, show info...
        movieName.setText(selectedMovie);
        
        if (suggestions.contains(selectedMovie)) {
            voteButton.setEnabled(true);
            if (votes.contains(selectedMovie)) {
                voteButton.setSelected(true);
                suggestButton.setSelected(true);
                suggestButton.setEnabled(false);
            } else {
                voteButton.setSelected(false);
                suggestButton.setSelected(true);
                suggestButton.setEnabled(true);   
            }
        } else {
            voteButton.setEnabled(false);
            voteButton.setSelected(false);
            suggestButton.setEnabled(true);
            suggestButton.setSelected(false);
        }
    }
    
    private void search(String input) {
        movies.removeAllElements();
        movies.addAll(moviesAll);
        for (String m : moviesAll) {
            if (!m.contains(input)) {
                movies.removeElement(m);
            }
        }
    }
    
    private void initSearch() {
        searchMovieField.getDocument().addDocumentListener(new DocumentListener() {
            @Override
            public void insertUpdate(DocumentEvent e) {
                search(searchMovieField.getText());
            }

            @Override
            public void removeUpdate(DocumentEvent e) {
                search(searchMovieField.getText());
            }

            @Override
            public void changedUpdate(DocumentEvent e) {
                search(searchMovieField.getText());
            }
        });
        refreshSearch();
        moviesList.requestFocus();  // To prevent search field to focus with placeholder.
    }
    
    private void refreshSearch() {
        searchEmpty = true;
        searchMovieField.setText("Search movie...");
        searchMovieField.setForeground(Color.GRAY);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        moviePanel = new javax.swing.JPanel();
        searchMovieField = new javax.swing.JTextField();
        moviesScrollPanel = new javax.swing.JScrollPane();
        moviesList = new javax.swing.JList<>();
        usersInLobbyPanel = new javax.swing.JPanel();
        usersScrollPanel = new javax.swing.JScrollPane();
        usersInLobbyList = new javax.swing.JList<>();
        suggestionsPanel = new javax.swing.JPanel();
        suggestionsScrollPanel = new javax.swing.JScrollPane();
        suggestionsList = new javax.swing.JList<>();
        readyButton = new javax.swing.JToggleButton();
        movieInfoPanel = new javax.swing.JPanel();
        movieNameLabel = new javax.swing.JLabel();
        movieName = new javax.swing.JLabel();
        suggestButton = new javax.swing.JToggleButton();
        voteButton = new javax.swing.JToggleButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        moviePanel.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Movies", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI Black", 0, 12))); // NOI18N

        searchMovieField.setText("jTextField1");
        searchMovieField.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                searchMovieFieldFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                searchMovieFieldFocusLost(evt);
            }
        });

        moviesScrollPanel.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);

        moviesList.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        moviesList.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        moviesList.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                moviesListMouseClicked(evt);
            }
        });
        moviesScrollPanel.setViewportView(moviesList);

        javax.swing.GroupLayout moviePanelLayout = new javax.swing.GroupLayout(moviePanel);
        moviePanel.setLayout(moviePanelLayout);
        moviePanelLayout.setHorizontalGroup(
            moviePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, moviePanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(moviePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(moviesScrollPanel, javax.swing.GroupLayout.DEFAULT_SIZE, 150, Short.MAX_VALUE)
                    .addComponent(searchMovieField))
                .addContainerGap())
        );
        moviePanelLayout.setVerticalGroup(
            moviePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(moviePanelLayout.createSequentialGroup()
                .addComponent(searchMovieField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(moviesScrollPanel, javax.swing.GroupLayout.DEFAULT_SIZE, 225, Short.MAX_VALUE)
                .addContainerGap())
        );

        usersInLobbyPanel.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Users in Lobby", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI Black", 0, 12))); // NOI18N

        usersInLobbyList.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        usersScrollPanel.setViewportView(usersInLobbyList);

        javax.swing.GroupLayout usersInLobbyPanelLayout = new javax.swing.GroupLayout(usersInLobbyPanel);
        usersInLobbyPanel.setLayout(usersInLobbyPanelLayout);
        usersInLobbyPanelLayout.setHorizontalGroup(
            usersInLobbyPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, usersInLobbyPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(usersScrollPanel)
                .addContainerGap())
        );
        usersInLobbyPanelLayout.setVerticalGroup(
            usersInLobbyPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, usersInLobbyPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(usersScrollPanel, javax.swing.GroupLayout.DEFAULT_SIZE, 199, Short.MAX_VALUE)
                .addContainerGap())
        );

        suggestionsPanel.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Suggestions", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI Black", 0, 12))); // NOI18N

        suggestionsList.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        suggestionsList.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        suggestionsList.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                suggestionsListMouseClicked(evt);
            }
        });
        suggestionsScrollPanel.setViewportView(suggestionsList);

        javax.swing.GroupLayout suggestionsPanelLayout = new javax.swing.GroupLayout(suggestionsPanel);
        suggestionsPanel.setLayout(suggestionsPanelLayout);
        suggestionsPanelLayout.setHorizontalGroup(
            suggestionsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, suggestionsPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(suggestionsScrollPanel)
                .addContainerGap())
        );
        suggestionsPanelLayout.setVerticalGroup(
            suggestionsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, suggestionsPanelLayout.createSequentialGroup()
                .addComponent(suggestionsScrollPanel)
                .addContainerGap())
        );

        readyButton.setText("Ready (Voting Done)");
        readyButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                readyButtonActionPerformed(evt);
            }
        });

        movieInfoPanel.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Movie Information", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI Black", 0, 12))); // NOI18N

        movieNameLabel.setText("Movie Name:");

        movieName.setFont(new java.awt.Font("Showcard Gothic", 0, 18)); // NOI18N
        movieName.setText("MOVIE NAME");

        suggestButton.setText("Suggest");
        suggestButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                suggestButtonActionPerformed(evt);
            }
        });

        voteButton.setText("Vote");
        voteButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                voteButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout movieInfoPanelLayout = new javax.swing.GroupLayout(movieInfoPanel);
        movieInfoPanel.setLayout(movieInfoPanelLayout);
        movieInfoPanelLayout.setHorizontalGroup(
            movieInfoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(movieInfoPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(movieInfoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(movieInfoPanelLayout.createSequentialGroup()
                        .addComponent(movieNameLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(movieName, javax.swing.GroupLayout.DEFAULT_SIZE, 399, Short.MAX_VALUE))
                    .addGroup(movieInfoPanelLayout.createSequentialGroup()
                        .addGroup(movieInfoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(suggestButton, javax.swing.GroupLayout.DEFAULT_SIZE, 135, Short.MAX_VALUE)
                            .addComponent(voteButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        movieInfoPanelLayout.setVerticalGroup(
            movieInfoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(movieInfoPanelLayout.createSequentialGroup()
                .addGroup(movieInfoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(movieNameLabel)
                    .addComponent(movieName))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(suggestButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(voteButton)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(moviePanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(usersInLobbyPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(movieInfoPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(suggestionsPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(readyButton, javax.swing.GroupLayout.DEFAULT_SIZE, 194, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                .addComponent(moviePanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(usersInLobbyPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                .addComponent(suggestionsPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(readyButton, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
            .addComponent(movieInfoPanel, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void readyButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_readyButtonActionPerformed
        // TODO add your handling code here:
        readyButton.setEnabled(false);
        suggestButton.setEnabled(false);
        voteButton.setEnabled(false);
        moviesList.setEnabled(false);
        suggestionsList.setEnabled(false);
        searchMovieField.setEnabled(false);
        System.out.println("User ready!");
        System.out.println(votes);
    }//GEN-LAST:event_readyButtonActionPerformed

    private void moviesListMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_moviesListMouseClicked
        // TODO add your handling code here:
        if (moviesList.getSelectedValue() != null) {
            selectedMovie = moviesList.getSelectedValue();
            showSelectedMovieInfo();
        }
    }//GEN-LAST:event_moviesListMouseClicked

    private void suggestionsListMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_suggestionsListMouseClicked
        // TODO add your handling code here:
        if (suggestionsList.getSelectedValue() != null) {
            selectedMovie = suggestionsList.getSelectedValue();
            showSelectedMovieInfo();
        }
    }//GEN-LAST:event_suggestionsListMouseClicked

    private void searchMovieFieldFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_searchMovieFieldFocusGained
        // TODO add your handling code here:
        if (searchEmpty) {
            searchMovieField.setText("");
            searchMovieField.setForeground(Color.BLACK);
            search("");
        }
    }//GEN-LAST:event_searchMovieFieldFocusGained

    private void searchMovieFieldFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_searchMovieFieldFocusLost
        // TODO add your handling code here:
        if (searchMovieField.getText().equals("")) {
            searchEmpty = true;
            searchMovieField.setText("Search movie...");
            searchMovieField.setForeground(Color.GRAY);
            search("");
        }
    }//GEN-LAST:event_searchMovieFieldFocusLost

    private void suggestButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_suggestButtonActionPerformed
        // TODO add your handling code here:
        if (suggestButton.isSelected()) {
            suggestions.addElement(selectedMovie);
            voteButton.setEnabled(true);
        } else {
            suggestions.removeElement(selectedMovie);
            votes.remove(selectedMovie);
            voteButton.setEnabled(false);
        }
    }//GEN-LAST:event_suggestButtonActionPerformed

    private void voteButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_voteButtonActionPerformed
        // TODO add your handling code here:
        if (voteButton.isSelected()) {
            votes.add(selectedMovie);
            suggestButton.setEnabled(false);
        } else {
            votes.remove(selectedMovie);
            suggestButton.setEnabled(true);
        } 
        System.out.println(votes);
    }//GEN-LAST:event_voteButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(LobbyGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(LobbyGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(LobbyGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(LobbyGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new LobbyGUI().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel movieInfoPanel;
    private javax.swing.JLabel movieName;
    private javax.swing.JLabel movieNameLabel;
    private javax.swing.JPanel moviePanel;
    private javax.swing.JList<String> moviesList;
    private javax.swing.JScrollPane moviesScrollPanel;
    private javax.swing.JToggleButton readyButton;
    private javax.swing.JTextField searchMovieField;
    private javax.swing.JToggleButton suggestButton;
    private javax.swing.JList<String> suggestionsList;
    private javax.swing.JPanel suggestionsPanel;
    private javax.swing.JScrollPane suggestionsScrollPanel;
    private javax.swing.JList<String> usersInLobbyList;
    private javax.swing.JPanel usersInLobbyPanel;
    private javax.swing.JScrollPane usersScrollPanel;
    private javax.swing.JToggleButton voteButton;
    // End of variables declaration//GEN-END:variables
}
